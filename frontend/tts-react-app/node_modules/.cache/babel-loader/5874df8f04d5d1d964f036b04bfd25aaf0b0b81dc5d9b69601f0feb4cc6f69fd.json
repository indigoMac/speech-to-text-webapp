{"ast":null,"code":"var _jsxFileName = \"/Users/mackenziecox/projects/AI/speech_proccessing/tts_app/frontend/tts-react-app/src/components/TextToSpeech.js\",\n  _s = $RefreshSig$();\n// frontend/tts-react-app/src/components/TextToSpeech.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextToSpeech = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [audioUrl, setAudioUrl] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/speak\", {\n        text\n      });\n      setAudioUrl(response.data.audio_file);\n    } catch (error) {\n      console.error(\"Error generating speech\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text-to-Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        rows: \"4\",\n        cols: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: `http://127.0.0.1:5000/${audioUrl}`,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(TextToSpeech, \"hEQ+ZUu8NJQpgzHGu7UelqqS2V4=\");\n_c = TextToSpeech;\nexport default TextToSpeech;\nvar _c;\n$RefreshReg$(_c, \"TextToSpeech\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TextToSpeech","_s","text","setText","audioUrl","setAudioUrl","handleSubmit","e","preventDefault","response","post","data","audio_file","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","rows","cols","type","controls","src","_c","$RefreshReg$"],"sources":["/Users/mackenziecox/projects/AI/speech_proccessing/tts_app/frontend/tts-react-app/src/components/TextToSpeech.js"],"sourcesContent":["// frontend/tts-react-app/src/components/TextToSpeech.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst TextToSpeech = () => {\n  const [text, setText] = useState(\"\");\n  const [audioUrl, setAudioUrl] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/speak\", {\n        text,\n      });\n      setAudioUrl(response.data.audio_file);\n    } catch (error) {\n      console.error(\"Error generating speech\", error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Text-to-Speech</h1>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          rows=\"4\"\n          cols=\"50\"\n        />\n        <br />\n        <button type=\"submit\">Convert</button>\n      </form>\n      {audioUrl && (\n        <audio controls>\n          <source src={`http://127.0.0.1:5000/${audioUrl}`} type=\"audio/mpeg\" />\n          Your browser does not support the audio element.\n        </audio>\n      )}\n    </div>\n  );\n};\n\nexport default TextToSpeech;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,6BAA6B,EAAE;QAC/DR;MACF,CAAC,CAAC;MACFG,WAAW,CAACI,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACEd,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA;MAAAiB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBrB,OAAA;MAAMsB,QAAQ,EAAEf,YAAa;MAAAU,QAAA,gBAC3BjB,OAAA;QACEuB,KAAK,EAAEpB,IAAK;QACZqB,QAAQ,EAAGhB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QACzCG,IAAI,EAAC,GAAG;QACRC,IAAI,EAAC;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACFrB,OAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNrB,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACNhB,QAAQ,iBACPL,OAAA;MAAO6B,QAAQ;MAAAZ,QAAA,gBACbjB,OAAA;QAAQ8B,GAAG,EAAE,yBAAyBzB,QAAQ,EAAG;QAACuB,IAAI,EAAC;MAAY;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,oDAExE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CArCID,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}