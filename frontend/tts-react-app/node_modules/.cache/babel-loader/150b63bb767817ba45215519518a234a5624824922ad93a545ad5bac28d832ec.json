{"ast":null,"code":"var _jsxFileName = \"/Users/mackenziecox/projects/AI/speech_proccessing/tts_app/frontend/tts-react-app/src/components/TextToSpeech.js\",\n  _s = $RefreshSig$();\n// src/components/TextToSpeech.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TextInput from \"./TextInput\";\nimport SelectInput from \"./SelectInput\";\nimport PitchRateInput from \"./PitchRateInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst voices = [{\n  name: \"en-US-Wavenet-A\",\n  label: \"English (US) - Wavenet A (Female)\"\n}, {\n  name: \"en-US-Wavenet-B\",\n  label: \"English (US) - Wavenet B (Male)\"\n}, {\n  name: \"en-US-Wavenet-C\",\n  label: \"English (US) - Wavenet C (Female)\"\n}, {\n  name: \"en-US-Wavenet-D\",\n  label: \"English (US) - Wavenet D (Male)\"\n}, {\n  name: \"en-US-Wavenet-E\",\n  label: \"English (US) - Wavenet E (Female)\"\n}, {\n  name: \"en-US-Wavenet-F\",\n  label: \"English (US) - Wavenet F (Male)\"\n}\n// Add more voices as needed\n];\nconst TextToSpeech = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [audioUrl, setAudioUrl] = useState(\"\");\n  const [languageCode, setLanguageCode] = useState(\"en-US\");\n  const [voiceName, setVoiceName] = useState(voices[0].name);\n  const [gender, setGender] = useState(\"NEUTRAL\");\n  const [pitch, setPitch] = useState(0.0);\n  const [speakingRate, setSpeakingRate] = useState(1.05);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/speak\", {\n        text,\n        language_code: languageCode,\n        voice_name: voiceName,\n        gender,\n        pitch,\n        speaking_rate: speakingRate\n      });\n      setAudioUrl(response.data.audio_file);\n    } catch (error) {\n      console.error(\"Error generating speech\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text-to-Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n        label: \"Language Code:\",\n        options: [{\n          name: \"en-US\",\n          label: \"English (US)\"\n        }],\n        value: languageCode,\n        onChange: e => setLanguageCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n        label: \"Voice Name:\",\n        options: voices,\n        value: voiceName,\n        onChange: e => setVoiceName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n        label: \"Gender:\",\n        options: [{\n          name: \"NEUTRAL\",\n          label: \"Neutral\"\n        }, {\n          name: \"MALE\",\n          label: \"Male\"\n        }, {\n          name: \"FEMALE\",\n          label: \"Female\"\n        }],\n        value: gender,\n        onChange: e => setGender(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PitchRateInput, {\n        label: \"Pitch:\",\n        value: pitch,\n        onChange: e => setPitch(parseFloat(e.target.value)),\n        min: \"-20.0\",\n        max: \"20.0\",\n        step: \"0.1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PitchRateInput, {\n        label: \"Speaking Rate:\",\n        value: speakingRate,\n        onChange: e => setSpeakingRate(parseFloat(e.target.value)),\n        min: \"0.25\",\n        max: \"4.0\",\n        step: \"0.1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      className: \"audio-player\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: `http://127.0.0.1:5000/${audioUrl}`,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(TextToSpeech, \"hM1TYpO+pvg2YKk8QzKbLGHpa20=\");\n_c = TextToSpeech;\nexport default TextToSpeech;\nvar _c;\n$RefreshReg$(_c, \"TextToSpeech\");","map":{"version":3,"names":["React","useState","axios","TextInput","SelectInput","PitchRateInput","jsxDEV","_jsxDEV","voices","name","label","TextToSpeech","_s","text","setText","audioUrl","setAudioUrl","languageCode","setLanguageCode","voiceName","setVoiceName","gender","setGender","pitch","setPitch","speakingRate","setSpeakingRate","handleSubmit","e","preventDefault","response","post","language_code","voice_name","speaking_rate","data","audio_file","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","options","parseFloat","min","max","step","type","controls","src","_c","$RefreshReg$"],"sources":["/Users/mackenziecox/projects/AI/speech_proccessing/tts_app/frontend/tts-react-app/src/components/TextToSpeech.js"],"sourcesContent":["// src/components/TextToSpeech.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TextInput from \"./TextInput\";\nimport SelectInput from \"./SelectInput\";\nimport PitchRateInput from \"./PitchRateInput\";\n\nconst voices = [\n  { name: \"en-US-Wavenet-A\", label: \"English (US) - Wavenet A (Female)\" },\n  { name: \"en-US-Wavenet-B\", label: \"English (US) - Wavenet B (Male)\" },\n  { name: \"en-US-Wavenet-C\", label: \"English (US) - Wavenet C (Female)\" },\n  { name: \"en-US-Wavenet-D\", label: \"English (US) - Wavenet D (Male)\" },\n  { name: \"en-US-Wavenet-E\", label: \"English (US) - Wavenet E (Female)\" },\n  { name: \"en-US-Wavenet-F\", label: \"English (US) - Wavenet F (Male)\" },\n  // Add more voices as needed\n];\n\nconst TextToSpeech = () => {\n  const [text, setText] = useState(\"\");\n  const [audioUrl, setAudioUrl] = useState(\"\");\n  const [languageCode, setLanguageCode] = useState(\"en-US\");\n  const [voiceName, setVoiceName] = useState(voices[0].name);\n  const [gender, setGender] = useState(\"NEUTRAL\");\n  const [pitch, setPitch] = useState(0.0);\n  const [speakingRate, setSpeakingRate] = useState(1.05);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/speak\", {\n        text,\n        language_code: languageCode,\n        voice_name: voiceName,\n        gender,\n        pitch,\n        speaking_rate: speakingRate,\n      });\n      setAudioUrl(response.data.audio_file);\n    } catch (error) {\n      console.error(\"Error generating speech\", error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Text-to-Speech</h1>\n      <form onSubmit={handleSubmit} className=\"form\">\n        <TextInput value={text} onChange={(e) => setText(e.target.value)} />\n        <SelectInput\n          label=\"Language Code:\"\n          options={[{ name: \"en-US\", label: \"English (US)\" }]}\n          value={languageCode}\n          onChange={(e) => setLanguageCode(e.target.value)}\n        />\n        <SelectInput\n          label=\"Voice Name:\"\n          options={voices}\n          value={voiceName}\n          onChange={(e) => setVoiceName(e.target.value)}\n        />\n        <SelectInput\n          label=\"Gender:\"\n          options={[\n            { name: \"NEUTRAL\", label: \"Neutral\" },\n            { name: \"MALE\", label: \"Male\" },\n            { name: \"FEMALE\", label: \"Female\" },\n          ]}\n          value={gender}\n          onChange={(e) => setGender(e.target.value)}\n        />\n        <PitchRateInput\n          label=\"Pitch:\"\n          value={pitch}\n          onChange={(e) => setPitch(parseFloat(e.target.value))}\n          min=\"-20.0\"\n          max=\"20.0\"\n          step=\"0.1\"\n        />\n        <PitchRateInput\n          label=\"Speaking Rate:\"\n          value={speakingRate}\n          onChange={(e) => setSpeakingRate(parseFloat(e.target.value))}\n          min=\"0.25\"\n          max=\"4.0\"\n          step=\"0.1\"\n        />\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Convert\n        </button>\n      </form>\n      {audioUrl && (\n        <audio controls className=\"audio-player\">\n          <source src={`http://127.0.0.1:5000/${audioUrl}`} type=\"audio/mpeg\" />\n          Your browser does not support the audio element.\n        </audio>\n      )}\n    </div>\n  );\n};\n\nexport default TextToSpeech;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}